<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oracle.mapper.TripMapper" >
  <resultMap id="BaseResultMap" type="com.oracle.pojo.Trip" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="deptid" property="deptid" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="lauchtime" property="lauchtime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="work" property="work" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="adminid" property="adminid" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="isdelete" property="isdelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, deptid, starttime, endtime, address, typeid, lauchtime, remark, work, 
    money, adminid, state, isdelete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.oracle.pojo.TripExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trip
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from trip
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trip
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oracle.pojo.TripExample" >
    delete from trip
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oracle.pojo.Trip" >
    insert into trip (id, userid, deptid, 
      starttime, endtime, address, 
      typeid, lauchtime, remark, 
      work, money, adminid, 
      state, isdelete)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{deptid,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, 
      #{typeid,jdbcType=INTEGER}, #{lauchtime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{work,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER}, #{adminid,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.oracle.pojo.Trip" >
    insert into trip
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="deptid != null" >
        deptid,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="lauchtime != null" >
        lauchtime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="work != null" >
        work,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="adminid != null" >
        adminid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="lauchtime != null" >
        #{lauchtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        #{work,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="adminid != null" >
        #{adminid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oracle.pojo.TripExample" resultType="java.lang.Integer" >
    select count(*) from trip
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update trip
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.deptid != null" >
        deptid = #{record.deptid,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.lauchtime != null" >
        lauchtime = #{record.lauchtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.work != null" >
        work = #{record.work,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.adminid != null" >
        adminid = #{record.adminid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update trip
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      deptid = #{record.deptid,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      typeid = #{record.typeid,jdbcType=INTEGER},
      lauchtime = #{record.lauchtime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      work = #{record.work,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER},
      adminid = #{record.adminid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      isdelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oracle.pojo.Trip" >
    update trip
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        deptid = #{deptid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="lauchtime != null" >
        lauchtime = #{lauchtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        work = #{work,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="adminid != null" >
        adminid = #{adminid,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oracle.pojo.Trip" >
    update trip
    set userid = #{userid,jdbcType=INTEGER},
      deptid = #{deptid,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      lauchtime = #{lauchtime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      work = #{work,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      adminid = #{adminid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      isdelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>